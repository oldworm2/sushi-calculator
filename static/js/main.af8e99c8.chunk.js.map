{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["src_App","state","total","amount","count","menus","title","price","index","Object","toConsumableArray","this","objectSpread","setState","map","menu","react_default","a","createElement","App_TitleBar","App_SushiCalculator","add","bind","del","reset","Component","TitleBar","props","AppBar_default","position","color","Toolbar_default","Typography_default","variant","SushiCalculator","Grid_default","direction","container","justify","spacing","style","padding","width","margin","xs","item","toFixed","Button_default","onClick","key","sm","md","lg","Card_default","CardActionArea_default","CardContent_default","IconButton_default","aria-label","Badge_default","badgeContent","ShoppingCart_default","CardActions_default","Add_default","Remove_default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mbA0HAA,6MAvGEC,MAAQ,CACNC,MAAM,CACJC,OAAQ,EACRC,MAAO,GAGTC,MAAM,CACJ,CACEC,MAAO,QACPC,MAAO,EACPH,MAAO,GAET,CACEE,MAAO,QACPC,MAAO,IACPH,MAAO,GAET,CACEE,MAAO,QACPC,MAAO,IACPH,MAAO,GAET,CACEE,MAAO,QACPC,MAAO,IACPH,MAAO,GAET,CACEE,MAAO,QACPC,MAAO,EACPH,MAAO,GAET,CACEE,MAAO,QACPC,MAAO,IACPH,MAAO,GAET,CACEE,MAAO,QACPC,MAAO,IACPH,MAAO,GAET,CACEE,MAAO,QACPC,MAAO,EACPH,MAAO,wEAKTI,GACF,IAAMH,EAAKI,OAAAC,EAAA,EAAAD,CAAOE,KAAKV,MAAMI,OACvBH,EAAKO,OAAAG,EAAA,EAAAH,CAAA,GAAOE,KAAKV,MAAMC,OAE7BG,EAAMG,GAAOJ,QACbF,EAAME,QACNF,EAAMC,QAAUE,EAAMG,GAAOD,MAC7BI,KAAKE,SAAS,CAACR,QAAOH,sCAGpBM,GACF,IAAMH,EAAKI,OAAAC,EAAA,EAAAD,CAAOE,KAAKV,MAAMI,OACvBH,EAAKO,OAAAG,EAAA,EAAAH,CAAA,GAAOE,KAAKV,MAAMC,OACH,IAAvBG,EAAMG,GAAOJ,QAChBC,EAAMG,GAAOJ,QACbF,EAAME,QACNF,EAAMC,QAAUE,EAAMG,GAAOD,MAC7BI,KAAKE,SAAS,CAACR,QAAOH,2CAItB,IAAMG,EAAQM,KAAKV,MAAMI,MAAMS,IAAI,SAAAC,GAEjC,OADAA,EAAKX,MAAQ,EACNW,IAQTJ,KAAKE,SAAS,CAACR,QAAOH,MALR,CACZC,OAAQ,EACRC,MAAO,sCAQT,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAD,CAAUb,MAAM,qBAChBU,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACE,EAAD,CACEf,MAAOM,KAAKV,MAAMI,MAClBH,MAAOS,KAAKV,MAAMC,MAClBmB,IAAKV,KAAKU,IAAIC,KAAKX,MACnBY,IAAKZ,KAAKY,IAAID,KAAKX,MACnBa,MAAOb,KAAKa,MAAMF,KAAKX,iBAjGjBc,aA2GZC,EAAW,SAACC,GAAD,OACfX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAQY,SAAS,SAASC,MAAM,WAC9Bd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACED,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAYgB,QAAQ,KAAKH,MAAM,WAC5BH,EAAMrB,UAMT4B,EAAkB,SAACP,GAAD,OACtBX,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAMmB,UAAU,MAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GAAIC,MAAO,CAACC,QAAS,GAAIC,MAAO,OAAQC,OAAQ,SACxG3B,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAM2B,GAAI,GAAIC,MAAI,GAChB7B,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAYgB,QAAQ,MAApB,WAAmCN,EAAMzB,MAAME,MAA/C,YAA+DuB,EAAMzB,MAAMC,OAAO2C,QAAQ,IAC1F9B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQ+B,QAAS,kBAAMrB,EAAMH,SAASS,QAAQ,YAA9C,UAIDN,EAAMtB,MAAMS,IAAK,SAACC,EAAMP,GAAP,OAClBQ,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAMgC,IAAKzC,EAAOqC,MAAI,EAACD,GAAI,GAAIM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7CpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,KACED,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAgB+B,QAAS,kBAAMrB,EAAMN,IAAIb,KACvCQ,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,KACED,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAMmB,UAAU,MAAME,QAAQ,SAASD,WAAS,EAACE,QAAS,IAExDvB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAM4B,MAAI,GACR7B,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CAAYwC,aAAW,QACrBzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAO0C,aAAc5C,EAAKX,MAAO0B,MAAsB,IAAff,EAAKX,MAAY,UAAU,aACjEY,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,SAIND,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAM4B,MAAI,GACR7B,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAYgB,QAAQ,MACjBlB,EAAKT,OAERU,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAYgB,QAAQ,aACjBlB,EAAKR,MAAMuC,QAAQ,QAS9B9B,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,KACAD,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAMmB,UAAU,MAAME,QAAQ,SAASD,WAAS,EAACE,QAAS,IACxDvB,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAM4B,MAAI,GACR7B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQ+B,QAAS,kBAAMrB,EAAMN,IAAIb,IAAQyB,QAAQ,YAAYH,MAAM,UAAU2B,aAAW,OACtFzC,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,OAEFD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAQ+B,QAAS,kBAAMrB,EAAMJ,IAAIf,IAAQyB,QAAQ,YAAYH,MAAM,YAAY2B,aAAW,OACxFzC,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,gBCrKI+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtD,EAAAC,EAAAC,cAAClB,EAAD,MAASuE,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.af8e99c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\n\nclass App extends Component {\n\n  state = {\n    total:{\n      amount: 0,\n      count: 0,\n    },\n    \n    menus:[\n      {\n        title: 'Sushi',\n        price: 1.00,\n        count: 0\n      },\n      {\n        title: 'Sushi',\n        price: 1.20,\n        count: 0\n      },\n      {\n        title: 'Sushi',\n        price: 1.50,\n        count: 0\n      },\n      {\n        title: 'Sushi',\n        price: 1.80,\n        count: 0\n      },\n      {\n        title: 'Sushi',\n        price: 2.00,\n        count: 0\n      },\n      {\n        title: 'Sushi',\n        price: 2.50,\n        count: 0\n      },\n      {\n        title: 'Sushi',\n        price: 2.80,\n        count: 0\n      },\n      {\n        title: 'Sushi',\n        price: 3.00,\n        count: 0\n      }\n    ]\n  }\n\n  add(index){\n    const menus = [...this.state.menus];\n    const total = {...this.state.total};\n    \n    menus[index].count++;\n    total.count++;\n    total.amount += menus[index].price;\n    this.setState({menus, total});\n  }\n\n  del(index){\n    const menus = [...this.state.menus];\n    const total = {...this.state.total};\n    if(menus[index].count === 0) return;\n    menus[index].count--;\n    total.count--;\n    total.amount -= menus[index].price;\n    this.setState({menus, total});\n  }\n\n  reset(){\n    const menus = this.state.menus.map(menu => {\n      menu.count = 0;\n      return menu;\n    });\n\n    const total = {\n      amount: 0,\n      count: 0\n    };\n\n    this.setState({menus, total});\n\n  }\n\n  render() {\n    return (\n      <div>\n        <TitleBar title=\"Sushi Calculator\"/>\n        <main>\n          <SushiCalculator \n            menus={this.state.menus} \n            total={this.state.total} \n            add={this.add.bind(this)} \n            del={this.del.bind(this)} \n            reset={this.reset.bind(this)}\n          />  \n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst TitleBar = (props) => (\n  <AppBar position=\"static\" color=\"primary\">\n    <Toolbar>\n      <Typography variant=\"h6\" color=\"inherit\">\n        {props.title}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nconst SushiCalculator = (props) => (\n  <Grid direction=\"row\" container justify=\"center\" spacing={24} style={{padding: 10, width: '100%', margin: 'auto'}}>\n    <Grid xs={12} item>\n      <Typography variant=\"h4\" >Total : {props.total.count} Price : {props.total.amount.toFixed(2)}</Typography>\n      <Button onClick={() => props.reset()} variant=\"outlined\" >\n        Reset\n      </Button>\n    </Grid>\n    {props.menus.map( (menu, index) => (\n    <Grid key={index} item xs={12} sm={6} md={4} lg={3}>\n        <Card >\n          <CardActionArea onClick={() => props.add(index)}>\n            <CardContent>\n              <Grid direction=\"row\" justify=\"center\" container spacing={24}>\n  \n                <Grid item >\n                  <IconButton aria-label=\"Cart\">\n                    <Badge badgeContent={menu.count} color={menu.count === 0?'primary':'secondary'}>\n                      <ShoppingCartIcon />\n                    </Badge>\n                  </IconButton>\n                </Grid>\n                <Grid item >\n                  <Typography variant=\"h6\">\n                    {menu.title}\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    {menu.price.toFixed(2)}\n                  </Typography>\n                </Grid>\n                \n\n              </Grid>\n            </CardContent>\n              \n          </CardActionArea>\n          <CardActions>\n          <Grid direction=\"row\" justify=\"center\" container spacing={24}>\n            <Grid item >\n              <Button onClick={() => props.add(index)} variant=\"contained\" color=\"primary\" aria-label=\"Add\">\n                <AddIcon />\n              </Button>\n              <Button onClick={() => props.del(index)} variant=\"contained\" color=\"secondary\" aria-label=\"Add\">\n                <RemoveIcon />\n              </Button>\n            </Grid>\n          </Grid>\n          </CardActions>\n        </Card>\n    </Grid>\n    ))}\n    \n  </Grid>\n);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}